// src/utils/user.ts
import { doc, setDoc, getDoc, collection } from "firebase/firestore"
import Cookies from "js-cookie"
import { db } from "../firebaseConfig"
import { User } from "@shared/types/User"

// Function to get or create a user with a nickname
export const getOrCreateUserWithNickname = async (
  nickname: string,
): Promise<string> => {
  // Check if the user ID is already in the cookies
  let userID = Cookies.get("userID")

  if (!userID) {
    // Create a new user document with a specified nickname
    const userRef = doc(collection(db, "users")) // Create a document reference without an ID

    // Set the document with the ID generated by Firestore as the user ID
    const newUser: User = {
      nickname,
      createdAt: new Date(),
    }

    await setDoc(userRef, newUser)

    // Get the document ID (which will be the user ID) and store it in a cookie
    userID = userRef.id
    Cookies.set("userID", userID, { expires: 365 }) // Set cookie to expire in 1 year
  } else {
    // Check if the user already exists in Firestore (for safety)
    const userDoc = await getDoc(doc(db, "users", userID))
    if (!userDoc.exists()) {
      throw new Error("User ID from cookie does not exist in Firestore.")
    }
  }

  return userID
}
